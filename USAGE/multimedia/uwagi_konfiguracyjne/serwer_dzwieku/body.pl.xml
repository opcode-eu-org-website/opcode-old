<article>
<title>Serwer dźwięku</title>
<p>Z serwera dźwięku KDE potrafią korzystać też liczne programy nie stworzone specjalnie dla tego środowiska (jak VLC, XMMS, ...), aby było to możliwe konieczne jest zainstalowanie do nich wtyczki dla systemu dźwiękowego "arts" oraz wybranie tego systemu jako wyjścia dźwięku. Ma to tę zaletę że programy te nie blokują sobie wtedy wzajemnie oraz serwerowi dźwięku KDE dostępu do urządzenia dźwiękowego (co ma miejsce przy korzystaniu z /dev/dsp). Jeżeli korzystamy z sterowników alsa możemy pokusić się o wykorzystanie miksera wbudowanego w ten system dźwięku (dmix) do miksowania dźwięków z serwera arts oraz innych programów (jest to działanie domyślne tego sterownika). ALSA umożliwia także bardziej dziwne sztuczki z karta dźwiękową jak np. zamiana kanałów (np. prawego z lewym lub głośników tylnych z przednimi) - <a class="int" href="./asound.conf">tutaj</a> zamieszczam przykład stosownego pliku konfiguracyjnego. Z plikiem tym poprawnie współpracuje VLC z dźwiękiem 5.1. Przy różnych eksperymentach z przekieroywaniem wyjść bardzo przydatny może okazać się <code>speaker-test -c6 -twav</code> umożliwiający testowanie poprawności ustawień (z opcjami <code>-tsine -f3000</code> ten sam program może posłużyć do genrowania dźwięku sinusoidalnego o zadanej częstości). Jeżeli mamy więcej niż 1 kartę dźwiękową warto zainteresować się parametrem modułów alsy <code>index=</code>, odpowiedzialnym za ustalanie kolejności kart w systemie.</p>


<p>Nie rzadko okazuje się iż możliwości konfiguracyjne alsy (asound.conf) czy też artsd są niewystarczające wtedy warto zainteresować się PulseAudio lub nawet jack. <wiki pl="PulseAudio">PulseAudio</wiki> jest dość prostym serwerem dźwięku, jego dużą zaletą jest zaawansowany mixer (pavucontrol) umożliwiający regulacją parametrów niezależnie dla każdego podłączonego do serwera procesu. Przy jego uruchamianiu należy zwrócić uwagę na przynależność użytkownika do którego należą klienci do odpowiednich grup na których operuje serwer. Niestety nawet pomimo chyba pomyślnego odpalenia serwera z priorytetem RT (co samo w sobie też nie jest łatwe) wyraźnie zauważalne było rwanie się dźwięku.</p>

<p>Zdecydowanie lepszym rozwiązaniem jest stosowanie serwera <wiki pl="JACK Audio Connection Kit">JACK</wiki>. Serwer ten pozwala na swobodne aranżowanie ścieżki którą przechodzi sygnał audio, dzięki czemu możliwe jest podłączenie mixera czy nawet procesora efektów pod wybrany program lub pod całość systemu. Serwer odpalony z priorytetem czasu rzeczywistego daje bardzo dobre efekty. Najprostszą metodą odpalenia jackd z szeregowaniem czasu rzeczywistego (jak dla mnie szybszą w wdrożeniu, pewniejszą, itd od zabaw z <kbd class="path">/etc/security/limits.conf</kbd>), tak aby jednocześnie działał na koncie i grupie jakiegoś użytkownika (aby można było się do niego podłączać) jest użycie następującego wrapper'a (musi mieć ustawiony SETUID na root lub być odpalany z root'a):</p>

<pre>
#include &lt;sched.h&gt;
#include &lt;sys/resource.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;errno.h&gt;

#define UID 1000
#define GID 1000

int main () {
	pid_t pid;
	struct sched_param sp;
	
	pid = getpid();
	sp.sched_priority = sched_get_priority_max(SCHED_FIFO) -30;
	
	if ( sched_setscheduler(pid, SCHED_RR, &amp;sp) ) {
		perror("Blad uzyskania szeregowania RT");
		return -1;
	}
	
	setresgid(GID, GID, GID);
	setresuid(UID, UID, UID);
	
	execlp("jackd", "jackd", "-dalsa", "-dhw", 0);
}
</pre>

<p>Przy korzystaniu z serwera jack warto zainteresować się aplikacjami takimi jak: <code>qjackctl</code> (graficzny manager połączeń kanałów audio), <code>jamin</code> (regulator), <code>jackeq</code> (regulator), <code>jack-rack</code> (zbiór efektów itp). Możliwe jest także wymuszenie kierowania audio z programów nie potrafiących korzystać z jakcd do niego za pomocą <kbd class="path">/etc/asound.conf</kbd>:</p>

<pre>pcm.jack {
	type jack
	playback_ports {
		0 alsa_pcm:playback_1
		1 alsa_pcm:playback_2
	}
	capture_ports {
		0 alsa_pcm:capture_1
		1 alsa_pcm:capture_2
	}
}</pre>

<p>Możliwe jest nawet podłączenie pulseaudio do jackd, wymaga to odpalenia pulseaudio z odpowiednim konfigiem w którym najistotniejsze jest przekierowanie wyjścia do jackd za pomocą załadowania odpowiednich modułów (zamiast modułów dostępu do rzeczywistego sprzętu):</p>
<pre>load-module module-jack-sink
load-module module-jack-source</pre>

<p>Jako że współczesne karty nie często obsługują sprzętowo <wiki pl="MIDI">MIDI</wiki> to godnym zainteresowania wydaje się programowy serwer syntezujący MIDI - np. <homepage url="http://sourceforge.net/projects/timidity">TiMidity++</homepage>.</p>

<p>Zobacz w Sieci: <homepage url="http://forum.dug.net.pl/viewtopic.php?id=17368">ALSA - Kontrola głośności per aplikacja - HOW TO</homepage>, <doc url="http://forum.dug.net.pl/viewtopic.php?id=12622">Audio mixer</doc>, <doc url="http://jackaudio.org/applications">Applications using JACK</doc>, <doc url="http://ubuntuforums.org/showthread.php?t=789578">HOWTO: PulseAudio Fixes &amp; System-Wide Equalizer Support</doc></p>
</article>
