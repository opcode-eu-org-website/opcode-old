<article>
<title>OpenPGP/GnuPG</title>

<p>Do szyfrowania oraz podpisywania danych możemy skorzystać <homepage url="http://www.gnupg.org/">GnuPG</homepage>.</p>

<p>Aby <strong>wygenerować</strong> klucze uruchamiamy <code>gpg --gen-key</code>, aby dodać dodatkowy identyfikator do naszego klucza (przydatne gdy chcemy nim podpisywać np. maile wysyłane z różnych adresów uruchamiamy <code>gpg --edit-key <var>podany.przy.generacji@email.identyfikujacy.klucz</var></code> i w uzyskanej linii poleceń wydajemy <code>adduid</code>.</p>

<p>Aby <strong>wyeksportować</strong> nasz klucz publiczny używamy komendy <code>gpg --armour --output <var>publiczny.gpg</var> --export <var>podany.przy.generacji@email.identyfikujacy.klucz</var></code>, aby wyeksportować klucz prywatny używamy opcji <code>gpg --list-secret-keys</code>. Możemy także uzyskać bardzo streszczony klucz publiczny (pozbawiony wszelkich podpisów innych osób) - w tym celu należy wygenerować go na podstawie klucza prywatnego w następujący sposób:</p>
<pre>
	mkdir gpg-export-tmp-dir
	chmod 700 gpg-export-tmp-dir
	gpg -a --export-secret-keys &gt; gpg-export-tmp-dir/sec.asc
	gpg --homedir gpg-export-tmp-dir --import gpg-export-tmp-dir/sec.asc
	gpg --homedir gpg-export-tmp-dir -a --export &gt; public.asc
	rm -fr gpg-export-tmp-dir
</pre>

<p>Aby <strong>zaimportować</strong> czyjś klucz <code>gpg --import <var>publiczny.gpg</var></code>.</p>
<p>Aby <strong>zaszyfrować</strong> dane wysyłane do kogoś jego kluczem publicznym: <code>gpg --output <var>plik_wyjsciowy</var> --encrypt --recipient <var>identyfikator@email.odbiorcy</var> <var>plik_wejsciowy</var></code>, aby <strong>odszyfrować</strong> odebrane dane szyfrowane naszym kluczem publicznym: <code>gpg --output <var>plik_wyjsciowy</var> --decrypt <var>plik_wejsciowy</var></code>.
	Gdy dysponujemy zestawem klucza publicznego i prywatnego w formacie binarnym możemy to uczynić także bez importowania tych kluczy: <code>gpg --keyring <var>klucz_publiczny</var> --secret-keyring <var>klucz_prywatny</var>  --decrypt <var>wiadomosc_do_odszyfrowania</var></code>. Jeżeli chcemy odszyfrować dane mając klucz prywatny w postaci ASCII nie obędzie się bez jego zaimportowania, można to jednak zrobić do tymczasowego pliku:</p>
<pre>
	mkdir gpg-decrypt-tmp-dir
	chmod 700 gpg-decrypt-tmp-dir
	gpg --homedir gpg-decrypt-tmp-dir --import secret.asc
	gpg --homedir gpg-decrypt-tmp-dir --decrypt zaszyfrowany.txt &gt; odszyfrowany.txt
	rm -fr gpg-decrypt-tmp-dir
</pre>

<p>Aby <strong>wygenerować podpis</strong> do wiadomości: <code>gpg --output <var>wygenerowany_podpis.sig</var> --detach-sig <var>plik_wejsciowy</var></code>.</p>

<p>Zobacz też: <doc url="http://www.7thguard.net/news.php?id=4510">Architektura klucza publicznego w Gnu Privacy Guard (GPG)</doc> oraz <id_link id="ssh:generowanie_kluczy">klucze ssh</id_link>, <id_link id="ABC_OF_COMPUTING:networks:IP:adresacja_i_routing:tunele_szyfrowanie_vpn">VPN</id_link>.</p>
</article>
