<article>
<title>Skrypty do routingu i podziału pasma</title>

<p>Prezentuję tutaj kilka skryptów dokonujących konfiguracji takiej usługi w systemie Linux: <id_link id="routing.sh">routing.sh</id_link>, <id_link id="routing.conf">routing.conf</id_link> i <id_link id="routing_fun.sh">routing_fun.sh</id_link> odpowiedzialne za routing IPv4 i IPv6. Skrypty te wymagają pela wraz z NetAddr::IP::Util (pakiet libnetaddr-ip-perl w wersji conajmniej 4.007), a także pakietów iptables, iproute oraz jądra z obsługą iptables, ipv6, htb i innych (zalecana jest obsługa imq w trybie AB).</p>

<p>Pokazane w przykładowym pliku konfiguracyjnym markowanie pakietów (ustawianie numerycznych znaczników dostępnych tylko w ramach hosta routującego) możemy użyć nie tylko jak tam pokazano do <code>tc filter</code> czy <code>iptables</code> ale także do kierowania ruchu do różnych tablic routingu. Możemy wykorzystać do tego polecenie <code>ip rule</code> poprzez wykorzystanie selektora <code>fwmark</code> i celu <code>table</code>. Innymi ciekawymi selektorami są: <code>tos</code> (wybór w oparciu o pole TOS), <code>from</code> lub <code>to</code> (adres źródłowy lub docelowy), <code>iif</code> (interfejs z którego przyszedł pakiet), a z celów <code>nat</code>, <code>reject</code>. Różne tabele routingu możemy tworzyć poprzez <code>ip route table <var>NAZWA_TABELI</var></code>, przy pomocy tego narzędzia możemy tworzyć zaawansowane mechanizmy routingu (routing lokalny, multicastowy, rozgłoszeniowy, ...). Z innych mniej znanych a ciekawych opcji komendy <code>ip</code> warto wspomnieć o: <code>maddress</code>, <code>link</code>, <code>neighbour</code>, <code>tunel</code>. Więcej szczegółów w <man>ip</man>.</p>

<p>Ponadto prezentuję skrypty generujące i prezentujące statystyki obciążenia łącza: <id_link id="traffic_stats.sh">traffic_stats.sh</id_link> i <id_link id="traffic_stats_show.sh">traffic_stats_show.sh</id_link> oraz skrypt startowy <id_link id="traffic_stats.init.sh">traffic_stats.init.sh</id_link>.</p>
</article>
