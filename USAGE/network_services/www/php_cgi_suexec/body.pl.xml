<article>
<title>PHP, CGI, suexec - czyli (nie)bezpieczny Apache</title>
<p>Powierzanie dostępu (prawa do odczytu) do poufnych plików (w szczególności plików haseł) użytkownikowi/grupie na prawach której chodzi serwer www (np. apache) jest pomysłem dość kontrowersyjnym, zwłaszcza w systemach wieloużytkownikowych z dostępem do PHP. Problem polega na tym że standardowo PHP działa z tymi samymi prawami co serwer www, zatem jeżeli jakiś plik ukryjemy przed innymi użytkownikami a damy do niego dostęp serwerowi www, to każdy kto może wykonać skrypt PHP przez WWW na tym serwerze będzie miał dostęp do naszego poufnego pliku. Problem ten w szczególności dotyczy też stron zabezpieczanych hasłem przez autoryzację Apache (umieszczaną np. w plikach .htaccess) gdyż nawet gdy plik będzie dostępny dla właściciela i grupy, a będzie maił zabroniony dostęp dla innych użytkowników musi mieć do niego dostęp serwer www (najczęściej przez prawa grupy) a zatem i inni użytkownicy przez PHP.</p>
<p>Pewnym rozwiązaniem tych problemów jest użytkowanie PHP jako CGI (w pierwszej linijce <code>#!/usr/bin/php-cgi</code> oraz prawo wykonywania pliku) wraz z korzystaniem z modułu suexec, wykonującego skrypty CGI z prawami innych użytkowników (dla vhostów ustawianych dyrektywą: <code>SuexecUserGroup nazwa_uzytkownika nazwa_grupy</code> oraz dla stron użytkowników dostępnych przez tyldą z prawami danego użytkownika). Wykorzystywany jest wtedy program <kbd class="path">/usr/lib/apache2/suexec</kbd>, który musi mieć właściciela root, grupę www-data (w Debianie) oraz prawa 4750. Oczywiście skrypty cgi są bardziej obciążające dla serwera niż php jako moduł dlatego można stosować równolegle te dwie metody - dla skryptów wymagających poufnych danych odpalamy jako cgi z użytkownikiem mającym dostęp do tych danych (ale nie root ;) dla pozostałych normalnie. Nie rozwiązuje to oczywiście powyższego problemu stron chronionych hasłem (ale stanowi pewne rozwiązanie zabezpieczenia np. haseł do baz danych czy bazy shadow gdy chcemy używać w skryptach autoryzacji PAM (do php można dodać odpowiednie funkcje)), rozwiązanie tamtego problemu wymaga aby nie było w ogóle skryptów php czy cgi chodzących z prawami serwera www.</p>
<p>Na koniec warto zwrócić uwagę że program suexec ma wkompilowaną na stałe w siebie ścieżkę na której musza być uruchamiane z prawami innego użytkownika skrypty (niestety nie jest ona ustawiana żadną dyrektywa konfiguracyjną), jest to ścieżka położenia pliku a nie dojścia do niego więc symlinki z ścieżki do katalogów z root vhostow nie pomogą (w razie wielkich trudności można ustawić przy kompilacji / ale nie jest to zalecane). Warto też zaznaczyć że php przeznaczone do pracy z linii komend w odróżnieniu od wersji kompilowanej dla cgi ma problemy z nagłówkami - nagłówki trzeba wysyłać na samym początku skryptu przez ich wypisywanie (np. echo), a nie przez funkcję header(); wersja cgi domyślnie wysyła też nagłówek określający że jest to html.</p>
<p>Kolejnym problemem jest że skrypty chodzące na prawach serwera www mogą wywołać suexec i odpalić inny skrypt na większych prawach niż posiada serwer www (suexec chodzi z SUID root), zatem zabawa z suexec traci sens gdy pozostaje możliwość odpalenia jakiegokolwiek polecenia z prawamui użytkownika serwera www. Można nawet zaryzykować stwierdzenie że sama obecność suxec w takich systemach stanowi więcej zagrożenia niż pożytku ... .</p>
</article>
