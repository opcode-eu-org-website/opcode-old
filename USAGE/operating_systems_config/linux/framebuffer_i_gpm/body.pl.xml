<article>
<title>Zaawansowana konsola - framebuffer i mysz</title>
<p>Istnieje możliwość uruchomienia konsoli linuxowej w trybie "graficznym". Umożliwia to wyświetlanie plików graficznych, oglądanie telewizji, granie w niektóre gry, jak również wyświetlanie dużo większej liczby linii tekstu. Aby uruchomić system z taką konsolą konieczne jest dodanie do parametrów startowych jądra parametru <code>vga=<samp>XXX</samp></code>, gdzie <samp>XXX</samp> jest zapisanym szesnastkowo (dla GRUB) lub dziesiętnie (dla LILO) kodem danego trybu. Poniżej tabelka dostępnych kodów (w postaci szesnastkowej, zaczerpnięta z linux/Documentation/fb/vesafb.txt):</p>
	<pre>    | 640x480  800x600  1024x768 1280x1024
----+-------------------------------------
256 |  0x301    0x303    0x305    0x307   
32k |  0x310    0x313    0x316    0x319   
64k |  0x311    0x314    0x317    0x31A   
16M |  0x312    0x315    0x318    0x31B   </pre>
<p>Kożystanie z framebuffera może prowadzić do pewnych problemów (o czym poniżej). Najczęściej wykorzystywany jest standardowy sterownik vesafb istnieją jednak moduły dla poszczególnych kart graficznych. Istnieje też interesująca biblioteka - DirectFB obsługująca wyświetlanie w trybie framebuffera, w przypadku kompilacji z opcją --enable-multi umożliwia pracę kilku aplikacji (może robic za coś na kształt menagera okien), szczegóły w <a class="ext" href="http://www.directfb.org/downloads/Core/DirectFB-1.0/README">http://www.directfb.org/downloads/Core/DirectFB-1.0/README</a></p>
<!-- vesafb-tng -->

<p>Przydatną rzeczą na konsoli jest również myszka. Aby móc z niej korzystać należy zainstalować pakiet gpm , który umożliwia uzycie komputerowego gryzonia na konsoli oraz kopiowanie i wklejanie przy jego pomocy tekstu. Konfiguracja tak aby wszystko działało dobrze (zwłaszcza gdy chcemy mieć też X'y) może przysporzyć trochę zabawy. W moim wypadku (radiowa myszka z rolką) największym problemem było dobranie rodzaju myszki w X'ach aby ta nie była nadwrażliwa ... wcześniejsze imps2 nie chciało poprawnie działać z /dev/gpmdata, w którym kopie danych z myszki umieszcza gpm; działająca konfiguracja wygląda natomiast tak:</p>
<p><strong><kbd class="path">/etc/gpm.conf</kbd> :</strong></p>
<pre>
# dla PS/2:
device=/dev/psaux
# dla USB (wymaga modolow hid i usbmouse):
#device=/dev/input/mice
# lub:
#device=/dev/input/mouse0

type=autops2
#type=imps2

responsiveness=
repeat_type=ms3
append=""
sample_rate=
</pre>
	<p><strong><kbd class="path">/etc/X11/XF86Config-4</kbd> :</strong></p>
<pre>
Section "InputDevice"
        Identifier      "Configured Mouse"
        Driver          "mouse"
        Option          "CorePointer"
        Option          "Device"                "/dev/gpmdata"
        Option          "Protocol"              "IntelliMouse"
        Option          "ZAxisMapping"          "4 5"
EndSection
</pre>
<p>Może się zdażyć że aby gpm działało wymaga dwu-trzykrotnego uruchomienia ...</p>

<p>Jeżli na jednej z tak uzyskanych pięknych konsoli chielibyśmy mieć zamiast lokalnego logowania logowanie zdalne po ssh możemy skozystać z poniższego wrappera umożiwiającego odpalanie takiego połączenia z getty:</p><pre>
#!/usr/bin/perl

# put in /etc/inittab:
# 2:23:respawn:/sbin/getty -ni -l /usr/local/ssh_to_xxx 38400 tty2
# where /usr/local/ssh_to_xxx is path to this script with correct $hostname variable:
my $hostname="baszta.vls.icm.edu.pl";

print "$hostname login: ";
my $username = &lt;STDIN&gt;;
chomp ( $username );
exec ("/usr/bin/ssh $username\@$hostname");
</pre>
</article>
