<article>
<title>Perl</title>

<p><wiki pl="Perl">Perl</wiki> jest wszechstronnym językiem programowania, umożliwiającym programowanie w różnych modelach. Posiada bardzo dużą liczbę dodatkowych modułów (bibliotek) zgromadzoną w archiwach <wiki pl="CPAN">CPAN</wiki>. Jest jednym z najpopularniejszych języków używanych do tworzenia CGI. Z Perla wywodzą się takie języki jak: <wiki pl="PHP">PHP</wiki>, <wiki pl="Ruby">Ruby</wiki> i <wiki pl="Python">Python</wiki>.</p>

<p>Do ewidentnych zalet tego języka należy wspomniana już kolekcja gotowych modułów (których wykorzystanie zdecydowanie upraszcza tworzenie programu), dynamiczne typy zmiennych, wbudowane wyrażenia regularne, tablice asocjacyjne. Niektórzy jako zaletę perla podają także "naturalny sposób zapisu" uzyskiwany przez wykorzystywanie zmiennej wbudowanej <code>$_</code>, która jest argumentem domyślnym wielu funkcji. Rozwiązanie to ma jednak wielu przeciwników, zwłaszcza osoby które tak jak ja lepiej czują się w językach formalnych niż naturalnych.</p>

<p>Perl uważany jest za język skryptowy, jednak do końca nim nie jest. Kod skryptu przed jego wykonaniem poddawany jest kompilacji do kodu pośredniego. Istnieje możliwość wykonania takiej kompilacji i wykorzystywania (oraz dystrybucji) kodu pośredniego.</p>


<subtitle id="podstawy">podstawy</subtitle>
<p>Komentarzem jest wszystko od znaku <code>#</code> do końca linii (uwaga: znak <code>#</code> może występować także w ramach jakiś operatorów - nie oznacza on wtedy komentarza).</p>

<p>Łańcuchy znaków umieszczane są w ramach <code>""</code> (wnętrze napisu podlega interpretacji) lub <code>''</code> (wnętrze napisu nie podlega interpretacji). Napisy można także ograniczać przy pomocy otwierających <code>qqX</code> lub <code>qqX</code> (gdzie <code>X</code> jest znakiem ogranicznika) i zamykającego znaku ogranicznika, jeżeli znak ogranicznika jest którymś z nawiasów otwierających na końcu napisu używa się odpowiedniego nawiasu zamykającego. Do łączenia napisów służy operator <code>.</code> (kropka).</p>


<subtitle id="zmienne">zmienne</subtitle>
<p>Nazwa zmiennej w perlu poprzedzana jest znakiem oznaczającym jej typ są to:</p>
<ul>
	<li><code>$</code> - zmienne skalarne (liczby, napisy, ...)</li>
	<li><code>@</code> - tablice zwykłe</li>
	<li><code>%</code> - tablice asocjacyjne</li>
	<li><code>&amp;</code> - podprogramy</li>
	<li><code>*</code> - zmienne globalne</li>
</ul>

<p>Standardowo nie ma potrzeby deklarowania zmiennych - perl gdy napotka nieznaną zmienną sam utworzy "pustą" zmienną (o wartości zero/napis pusty/...). Można to zmienić umieszczając w kodzie <code>use strict 'vars';</code>, wymusza to jawne deklarowanie zmiennych ze słowem kluczowym <code>my</code>, dodanie tego słowa do deklaracji zmiennej powoduje iż zmienna staje się zmienną lokalną (domyślnie wszystkie zmienne są globalne.</p>


<subtitle id="zmienne2">zmienne przedefiniowane</subtitle>
<ul>
	<li><code>$_</code> - argument domyślny</li>
	<li><code>@_</code> - tablica argumentów domyślnych</li>
	<li><code>@ARGV</code> - tablica argumentów przekazanych do skryptu</li>
	<li><code>%ENV</code> - tablica zmiennych środowiskowych</li>
	<li><code>$?</code> - status wyjścia z funkcji system()</li>
	<li><code>$$</code> - PID wykonywanego skryptu</li>
</ul>

<p>Zobacz w Sieci: <wiki pl="b:Perl" en="b:Perl Programming">Perl @ Wikibooks</wiki>, <wiki en="b:Perl 6 Programming">Perl 6 Programming</wiki></p>

<p>Zachęcam także do zapoznania się z kilkoma przykładami programów stworzonych przeze mnie w perlu - <id_link id="smtp2xmpp.pl">smtp2xmpp.pl</id_link> (nowsza wersja klienta jabbera przeznaczona do wysyłania komunikatów o nowej poczcie), <id_link id="mail-bot.pl">mail-bot.pl</id_link> (bot jabberowski odpowiadający na pytania o nową pocztę - w programie pokazane deklarowanie funkcji, korzystanie z daty i czasu oraz zewnętrznych aplikacji).</p>
</article>
