<article>
<title>Erlang</title>

<p><wiki pl="Erlang (język programowania)">Erlang</wiki> jest dość oryginalnym językiem programowania. Jest to język wybitnie <wiki pl="Programowanie funkcyjne">funkcyjny</wiki> (do tego stopnia iż nie ma w nim pętli), posiada dość nietypową składnie, ale np. nie wymaga deklarowania zmiennych.</p>

<p>Wiele z funkcji języka możemy testować w jego linii poleceń (<code>erl</code>, jednak wiele z nich (np. deklarowanie funkcji) wymaga aby były umieszczone w modułach - w tym celu tworzymy plik nazwamodulu.erl, umieszczamy w nim nasz kod a w linii poleceń wydajemy <code>c(nazwamodulu).</code> co powoduje przebudowanie modułu, po czym możemy korzystać z zdefiniowanych w nim funkcji - <code>nazwamodulu:funkcja(argumenty)</code>.</p>

<p>Poniżej prezentuję mój patch (aktualnie dodany już do głównego kodu) umożliwiający przechowywanie wiadomości offline dla użytkowników autoryzowanych przez PAM w serwerze XMPP "ejabberd". Polega on na zastąpieniu trywialnego ciała funkcji "is_user_exists" w module "ejabberd_auth_pam" następującym kodem:</p>
<pre>
is_user_exists( _User, _Server ) -&gt;
 %% wczytujemy do FileStr plik /etc/passwd dodając na początku pustą linię
 {ok,FileBin}=file:read_file("/etc/passwd").
 Tmp=binary_to_list(FileBin).
 FileStr=string:concat("\n", Tmp).

 %% tworzymy RegExp dodając do zmiennej napisowej _User
 %% znak nowej linii na początku i : na końcu
 Tmp2=string:concat("\n", _User).
 RegExp=string:concat(Tmp2, ":").

 %% jeżeli w FileStr wystąpiło wyrażenie RegExp
 %% zwracamy true w przeciwnym razie false
 case regexp:match(FileStr, RegExp) of
   {match, _, _}  -&gt;
       true;
   _ -&gt;
       false
 end.
</pre>
<p>Nie jest to rozwiązanie eleganckie (odwołania do /etc/passwd to nie PAM), ale w większości wystarczające. Kod ten pokazuje korzystanie z plików i napisów w erl'angu. Obrazuje również zdefiniowanie funkcji przyjmującej dwa argumenty i zwracającej wartość true lub false, deklaracja ciała funkcji następuje po <code>-&gt;</code>, a kończy się kropką.</p>

<p>W ramach serwisu opublikowane jest kilka patchy mojego autorstwa do serwera "ejabberd", który stworzony jest właśnie w erlangu - zachęcam do zapoznania się z nimi jako przykładami programowania w tym języku - "ejabberd_log_offline_message.diff" (łatka stanowiąca fragment system <id_link id="xmpp_smtp">powiadomień XMPP/SMTP</id_link>, pokazuje obsługę plików, operacje na napisach, a także tworzenie katalogu i formatowanie czasu), <id_link id ="ejabberd_aliases">JID aliases</id_link> (zestaw łatek implementujących aliasy JID, pokazuje komunikację z zewnętrzną aplikacją, instrukcję warunkowe, tworzenie funkcji i zwracanie z nich wyników.</p>

<p>Zobacz w Sieci: <doc url="http://www.erlang.org/doc/">dokumentacja języka</doc>.</p>
</article>
